{"version":3,"file":"static/js/97.4ad10d3e.chunk.js","mappings":"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","sources":["components/api.js","components/pages/cast.jsx","components/pages/movie.review.jsx","components/pages/movieDetails.jsx"],"sourcesContent":["import axios from 'axios'\nconst API_KEY = 'fb80b48b1255806de867923f1e41971b'\n\n// функція для отримання популярних фільмів на сьогодні\nasync function getTrendingMovies(){\n    try{\n    const url =  `https://api.themoviedb.org/3/trending/all/day?api_key=${API_KEY}`\n    const res = await axios.get(url)\n    return res.data.results\n}\ncatch(error){\nreturn[]\n}}\n\n// функція для пошуку фільмів\n\nasync function searchMovies(query,page=1){\n    try{\n        const url=`https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&query=${query}&page=${page}`\n        const res= await axios.get(url)\n        return res.data.results\n    }\n    catch (error){\n        return []\n    }\n}\n\n\n// функція для отримааня інформаціі про фільм\nasync function getMovieDetails(movieId){\n    try{\n        const url=`https://api.themoviedb.org/3/movie/${movieId}?api_key=${API_KEY}`\n        const res =await axios.get(url)\n        return res.data\n    }\n    catch (error){\n        return null\n    }\n}\n\n// функція для отримання інформації про акторів\nasync function getMovieCredits(movieId){\ntry{\n    const url =  `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=${API_KEY}`\n    const res = await axios.get(url)\n    return res.data\n}\ncatch (error){\n    return []\n}\n}\n\n// функція для отримання огляду фільму\nasync function getMovieReview(movieId){\n    try {\n        const url=`https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=${API_KEY}`;\n        const res = await axios.get(url)\n        return res.data\n    }\n    catch (error){\n        return []\n    }\n}\n\n\nexport{\n    getTrendingMovies,\n    searchMovies,\n    getMovieDetails,\n    getMovieCredits,\n    getMovieReview\n}","// import css from './cast.module.css'\n\nimport { getMovieCredits } from \"../api\"\nimport { useState, useEffect }from \"react\"\n\n\n\n\nconst Cast = ({movieId}) => {\n\n    const [movieCredits,setMovieCredits]= useState([])\n    const [error,setError]= useState(null)\n\n    useEffect(()=>{\n        getMovieCredits(movieId).then((movieCredits)=>{\n            setMovieCredits(movieCredits)\n        })\n        .catch ((error)=>{\n            setError('Error fetching trending movies: ' + error.message)\n        })\n        \n    },[movieId])\n\n    const defaultImage= 'https://cdn-icons-png.flaticon.com/512/4054/4054617.png';\nreturn(\n    <div>\n        <h2>Cast</h2>\n        {error ? (\n            <p>Error: {error}</p>):(\n                <div>\n                    {movieCredits.map((actor)=>(\n                        <div key={actor.id}>\n                          <img\n                          src={actor.profile_path ? `https://image.tmdb.org/t/p/w200/${actor.profile_path}` : defaultImage}\n                          alt={actor.name}\n                          width={230}\n                          />\n                          <p>{actor.name}</p>\n                        </div>\n                    ))}\n                </div>\n            )\n    }\n    </div>\n)\n}\nexport default Cast","// import css from './movieReview.module.css'\n\nimport { getMovieReview } from \"../api\"\nimport React,{ useEffect, useState } from \"react\"\n\n\nconst Cast =({movieId})=>{\nconst [movieReview,setMovieReview]= useState([])\nconst [error,setError]= useState(null)\n\nuseEffect(()=>{\ngetMovieReview(movieId)\n.then((movieReview)=>{\n    setMovieReview(movieReview)\n}\n).catch((error)=>{\n    setError('Error fetching trending movies: ' + error.message)\n})\n},[movieId])\n\nreturn(\n<div>\n{movieReview.length> 0?(\n    <ul>\n        {movieReview.map((author)=>(\n            <li key={author.id}>\n                <h3>{author.author}</h3>\n                <p>{author.content}</p>\n\n            </li>\n        ))}\n    </ul>\n):(\n    <p>{error ? `Error: ${error}` : \"We don't have any reviews for this movie.\"}</p>\n    \n)}\n\n</div>\n)\n}\nexport default Cast","// import css from './movieDetails.module.css'\n\nimport { getMovieDetails } from \"../api\"\nimport React,{ useEffect, useState } from \"react\"\nimport { NavLink, Route,Routes, useLocation, useNavigate, useParams } from\"react-router-dom\"\nimport Cast from \"./cast\"\nimport Reviews from './movie.review'\n\n\n\nconst MovieDetails=()=>{\n\nconst {movieId} = useParams()\nconst [movieDetails,setMovieDetails]= useState([])\nconst [error,setError]=useState(null)\n\nconst navigate = useNavigate()\nconst location = useLocation()\n\n\n\nconst onBack= ()=>{\n    if(location.pathname.includes('/movies')){\n        navigate(-1)\n    }\n    else{\n        navigate('/')\n    }\n}\n\n\nuseEffect(()=>{\ngetMovieDetails(movieId)\n.then((movieDetails)=>{\n    setMovieDetails(movieDetails)\n}).catch((error)=>{\n    setError('Error fetching trending movies: ' + error.message);\n})\n},[movieId])\n\nconst defaultImg = 'https://ireland.apollo.olxcdn.com/v1/files/0iq0gb9ppip8-UA/image;s=1000x700';\n\nif(error){\nreturn(<div>{error}</div>)\n}\n\nif (!movieDetails){\n    return (\n        <div>Loading...</div>\n    )\n}\n \nconst voteMiddle=movieDetails.vote_avarage\nconst percentLiked = voteMiddle?(voteMiddle / 10) * 100:null\n\nreturn(\n<>\n<div>\n    <button type=\"button\" onClick={onBack}>Go back</button>\n</div>\n\n<div>\n<img\nsrc={movieDetails.poster_path?`https://image.tmdb.org/t/p/w500/${movieDetails.poster_path}` : defaultImg}\nalt=\"poster\"\nwidth={250}/>\n<h2>{movieDetails.title ? movieDetails.title : movieDetails.name}</h2>\n<p>User score:{Math.round(percentLiked)}%</p>\n<div>\n        <h2>Overview</h2>\n        <p>{movieDetails.overview}</p>\n      </div>\n      <div>\n        <h2>Genres</h2>\n        <p>\n          {movieDetails.genres &&\n            movieDetails.genres.map((genre) => {\n              return genre.name;\n            }).join(' ')}\n        </p>\n      </div>\n\n      <div>\n<h2>Additional information</h2>\n<ul>\n    <li>\n        <NavLink to={`/movies/${movieId}/cast`}>Cast</NavLink>\n    </li>\n    <li>\n        <NavLink to={`/movies/${movieId}/reviews`}>Reviews</NavLink>\n    </li>\n</ul>\n\n      </div>\n\n\n    \n\n<Routes >\n<Route path = 'cast' element={<Cast movieId={movieId} />} />\n<Route path = 'review' element  = {<Reviews movieId={movieId}/>}/>\n\n</Routes>\n\n</div>\n</>\n\n)\n\n}\n\nexport default MovieDetails"],"names":["API_KEY","getTrendingMovies","url","axios","res","data","results","searchMovies","query","page","getMovieDetails","movieId","getMovieCredits","getMovieReview","useState","movieCredits","setMovieCredits","error","setError","useEffect","then","catch","message","map","actor","src","profile_path","alt","name","width","id","movieReview","setMovieReview","length","author","content","useParams","movieDetails","setMovieDetails","navigate","useNavigate","location","useLocation","voteMiddle","vote_avarage","percentLiked","type","onClick","pathname","includes","poster_path","title","Math","round","overview","genres","genre","join","to","path","element"],"sourceRoot":""}